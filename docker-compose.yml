networks:
  perf:
    driver: bridge  # 定义 perf 网络
services:
  postgresql:
    image: postgres:14.5
    container_name: postgresql
    restart: always
    environment:
      TZ: Asia/Shanghai
      LANG: en_US.UTF-8
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
    volumes:
      - "./docker/postgresql/data:/var/lib/postgresql/data"
    ports:
      - "5432:5432"
    networks:
      - perf  # 使用 perf 网络
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"  # 映射 Nginx 端口
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf  # 挂载 Nginx 配置文件
    networks:
      - perf

  frontend:
    build:
      context: ./frontend/my-vue-app
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - ./frontend/my-vue-app:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    networks:
      - perf  # 使用 perf 网络

  backend:
    build:
      context: ./mobileperf-master  # 指定后端服务目录
      dockerfile: Dockerfile  # Flask 后端服务的 Dockerfile
    volumes:
      - ./mobileperf-master/mobileperf:/app/mobileperf  # 挂载后端服务目录
    ports:
      - "5500:5500"
    environment:
      - FLASK_ENV=development
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456
      - POSTGRES_DB=postgres
      - POSTGRES_HOST=postgresql  # 数据库服务名称
    depends_on:
      - postgresql
    networks:
      - perf  # 使用 perf 网络

  adb_service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: adb_service
    volumes:
      - .:/app
      - ~/.android:/root/.android  # 挂载主机的 ADB key 文件
    restart: always
    privileged: true  # 允许容器访问 USB 设备
    network_mode: "host"  # 使用主机网络模式
    command: [ "adb", "-a", "nodaemon", "server" ]

  start:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: start
    volumes:
      - .:/app
    restart: always
    privileged: true  # 允许容器访问 USB 设备
    network_mode: "host"  # 使用主机网络模式
    command: [ "python3", "adbconnect.py" ]



