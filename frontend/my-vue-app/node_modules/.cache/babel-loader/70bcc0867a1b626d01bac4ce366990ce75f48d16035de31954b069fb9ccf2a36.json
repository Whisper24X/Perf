{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-60515d0c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"设备详情\", -1 /* HOISTED */));\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"设备名称：\", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  key: 1\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"其他字段：\", -1 /* HOISTED */));\nconst _hoisted_6 = {\n  key: 2\n};\nconst _hoisted_7 = {\n  key: 3\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"API 响应\", -1 /* HOISTED */));\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"card\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"card-body\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"chart-social-referrals\",\n  class: \"chart-lg\"\n})])], -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, [_hoisted_1, $data.deviceData ? (_openBlock(), _createElementBlock(\"p\", _hoisted_2, [_hoisted_3, _createTextVNode(\" \" + _toDisplayString($data.deviceData.device_name), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), $data.deviceData ? (_openBlock(), _createElementBlock(\"p\", _hoisted_4, [_hoisted_5, _createTextVNode(\" \" + _toDisplayString($data.deviceData.other_field), 1 /* TEXT */)])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_6, \" 加载中... \")), _ctx.devicePerfInfo ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_hoisted_8, _createElementVNode(\"pre\", null, _toDisplayString(_ctx.devicePerfInfo), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]), _hoisted_9], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","key","class","id","_createElementBlock","_Fragment","_hoisted_1","$data","deviceData","_hoisted_2","_hoisted_3","_createTextVNode","_toDisplayString","device_name","_createCommentVNode","_hoisted_4","_hoisted_5","other_field","_hoisted_6","_ctx","devicePerfInfo","_hoisted_7","_hoisted_8","_hoisted_9"],"sources":["/Users/yangcong/性能/Perf/frontend/my-vue-app/src/components/DeviceDetails.vue"],"sourcesContent":["<template>\n    <div>\n        <h1>设备详情</h1>\n        <p v-if=\"deviceData\">\n            <strong>设备名称：</strong> {{ deviceData.device_name }}\n        </p>\n        <p v-if=\"deviceData\">\n            <strong>其他字段：</strong> {{ deviceData.other_field }}\n        </p>\n        <p v-else>\n            加载中...\n        </p>\n        <div v-if=\"devicePerfInfo\">\n            <h2>API 响应</h2>\n            <pre>{{ devicePerfInfo }}</pre>\n        </div>\n    </div>\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <div id=\"chart-social-referrals\" class=\"chart-lg\"></div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\n// import ApexCharts from 'apexcharts';\nimport ApexCharts from 'apexcharts';\nexport default {\n    name: 'DeviceDetails',\n    data() {\n        return {\n            deviceData: null,\n            devic: null\n        };\n    },\n    created() {\n        this.deviceData = {\n            device_name: this.$route.query.device_name,\n            other_field: this.$route.query.other_field\n        };\n\n        this.fetchDevicePerfInfo();\n    },\n    methods: {\n        fetchDevicePerfInfo() {\n            const payload = {\n                device_name: this.deviceData.device_name,\n                other_field: this.deviceData.other_field\n            };\n\n            axios.post('http://127.0.0.1:5000/view_device_perf_info', payload)\n                .then(response => {\n                    this.devicePerfInfo = response.data;\n                    this.renderChart(); // 数据获取后调用方法渲染图表\n                })\n                .catch(error => {\n                    console.error(\"获取设备性能信息出错:\", error);\n                });\n        },\n        renderChart() {\n            if (this.devicePerfInfo) {\n                const seriesData = [\n                    {\n                        name: \"Facebook\",\n                        data: this.generateSeriesData(this.devicePerfInfo, 'facebook')\n                    },\n                    {\n                        name: \"Twitter\",\n                        data: this.generateSeriesData(this.devicePerfInfo, 'twitter')\n                    },\n                    {\n                        name: \"Dribbble\",\n                        data: this.generateSeriesData(this.devicePerfInfo, 'dribbble')\n                    }\n                ];\n\n                window.ApexCharts && new ApexCharts(document.getElementById('chart-social-referrals'), {\n                    chart: {\n                        type: \"line\",\n                        fontFamily: 'inherit',\n                        height: 240,\n                        parentHeightOffset: 0,\n                        toolbar: {\n                            show: false,\n                        },\n                        animations: {\n                            enabled: false\n                        },\n                    },\n                    fill: {\n                        opacity: 1,\n                    },\n                    stroke: {\n                        width: 2,\n                        lineCap: \"round\",\n                        curve: \"smooth\",\n                    },\n                    series: seriesData,\n                    tooltip: {\n                        theme: 'dark'\n                    },\n                    grid: {\n                        padding: {\n                            top: -20,\n                            right: 0,\n                            left: -4,\n                            bottom: -4\n                        },\n                        strokeDashArray: 4,\n                        xaxis: {\n                            lines: {\n                                show: true\n                            }\n                        },\n                    },\n                    xaxis: {\n                        labels: {\n                            padding: 0,\n                        },\n                        tooltip: {\n                            enabled: false\n                        },\n                        type: 'datetime',\n                        categories: this.devicePerfInfo.labels // 假设标签在 devicePerfInfo 中\n                    },\n                    yaxis: {\n                        labels: {\n                            padding: 4\n                        },\n                    },\n                    // colors: [tabler.getColor(\"facebook\"), tabler.getColor(\"twitter\"), tabler.getColor(\"dribbble\")],\n                    legend: {\n                        show: true,\n                        position: 'bottom',\n                        offsetY: 12,\n                        markers: {\n                            width: 10,\n                            height: 10,\n                            radius: 100,\n                        },\n                        itemMargin: {\n                            horizontal: 8,\n                            vertical: 8\n                        },\n                    },\n                }).render();\n            }\n        },\n        generateSeriesData(devicePerfInfo, seriesName) {\n            const seriesData = [];\n            devicePerfInfo.forEach(dataPoint => {\n                // 根据实际的 API 响应结构进行调整\n                if (dataPoint.name === seriesName) {\n                    seriesData.push(dataPoint.value); // 替换为包含系列数据的实际字段\n                }\n                console.log(seriesData)\n            });\n            return seriesData;\n        }\n    }\n};\n</script>\n\n<style scoped>\nh1 {\n    color: #42b983;\n}\n</style>\n\n"],"mappings":";;gEAEQA,mBAAA,CAAa,YAAT,MAAI;;EAFhBC,GAAA;AAAA;gEAIYD,mBAAA,CAAsB,gBAAd,OAAK;;EAJzBC,GAAA;AAAA;gEAOYD,mBAAA,CAAsB,gBAAd,OAAK;;EAPzBC,GAAA;AAAA;;EAAAA,GAAA;AAAA;gEAaYD,mBAAA,CAAe,YAAX,QAAM;gEAIlBA,mBAAA,CAIM;EAJDE,KAAK,EAAC;AAAM,I,aACbF,mBAAA,CAEM;EAFDE,KAAK,EAAC;AAAW,I,aAClBF,mBAAA,CAAwD;EAAnDG,EAAE,EAAC,wBAAwB;EAACD,KAAK,EAAC;;;uBAnBnDE,mBAAA,CAAAC,SAAA,SACIL,mBAAA,CAeM,cAdFM,UAAa,EACJC,KAAA,CAAAC,UAAU,I,cAAnBJ,mBAAA,CAEI,KALZK,UAAA,GAIYC,UAAsB,EAJlCC,gBAAA,CAIkC,GAAC,GAAAC,gBAAA,CAAGL,KAAA,CAAAC,UAAU,CAACK,WAAW,iB,KAJ5DC,mBAAA,gBAMiBP,KAAA,CAAAC,UAAU,I,cAAnBJ,mBAAA,CAEI,KARZW,UAAA,GAOYC,UAAsB,EAPlCL,gBAAA,CAOkC,GAAC,GAAAC,gBAAA,CAAGL,KAAA,CAAAC,UAAU,CAACS,WAAW,iB,oBAEpDb,mBAAA,CAEI,KAXZc,UAAA,EASkB,UAEV,IACWC,IAAA,CAAAC,cAAc,I,cAAzBhB,mBAAA,CAGM,OAfdiB,UAAA,GAaYC,UAAe,EACftB,mBAAA,CAA+B,aAAAY,gBAAA,CAAvBO,IAAA,CAAAC,cAAc,iB,KAdlCN,mBAAA,e,GAiBIS,UAIM,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}