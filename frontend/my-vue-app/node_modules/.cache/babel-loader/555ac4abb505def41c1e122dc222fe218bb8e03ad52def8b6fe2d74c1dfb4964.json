{"ast":null,"code":"import axios from 'axios';\nimport VueApexCharts from 'vue3-apexcharts';\nexport default {\n  name: 'DeviceDetails',\n  components: {\n    apexchart: VueApexCharts\n  },\n  data() {\n    return {\n      deviceData: null,\n      devicePerfInfo: null,\n      cpuChartOptions: {\n        chart: {\n          type: 'area',\n          height: 350,\n          animations: {\n            enabled: true,\n            easing: 'linear',\n            dynamicAnimation: {\n              speed: 1000\n            }\n          }\n        },\n        xaxis: {\n          type: 'datetime',\n          labels: {\n            datetimeFormatter: {\n              year: 'yyyy',\n              month: \"MMM 'yy\",\n              day: 'dd MMM',\n              hour: 'HH:mm'\n            },\n            style: {\n              color: '#fff'\n            }\n          },\n          title: {\n            text: '时间',\n            style: {\n              color: '#fff'\n            }\n          }\n        },\n        tooltip: {\n          enabled: true,\n          x: {\n            format: 'HH:mm:ss'\n          }\n        },\n        title: {\n          text: 'CPU',\n          align: 'left'\n        },\n        stroke: {\n          width: 2\n        },\n        series: []\n      },\n      memChartOptions: {\n        chart: {\n          type: 'area',\n          height: 350,\n          animations: {\n            enabled: true,\n            easing: 'linear',\n            dynamicAnimation: {\n              speed: 1000\n            }\n          }\n        },\n        xaxis: {\n          type: 'datetime',\n          labels: {\n            datetimeFormatter: {\n              year: 'yyyy',\n              month: \"MMM 'yy\",\n              day: 'dd MMM',\n              hour: 'HH:mm'\n            },\n            style: {\n              color: '#fff'\n            }\n          },\n          title: {\n            text: '时间',\n            style: {\n              color: '#fff'\n            }\n          }\n        },\n        tooltip: {\n          enabled: true,\n          x: {\n            format: 'HH:mm:ss'\n          }\n        },\n        title: {\n          text: 'Memory Usage',\n          align: 'left',\n          style: {\n            color: '#fff'\n          }\n        },\n        stroke: {\n          width: 2\n        },\n        series: []\n      },\n      fpsChartOptions: {\n        chart: {\n          type: 'area',\n          height: 350,\n          animations: {\n            enabled: true,\n            easing: 'linear',\n            dynamicAnimation: {\n              speed: 1000\n            }\n          }\n        },\n        xaxis: {\n          type: 'datetime',\n          labels: {\n            datetimeFormatter: {\n              year: 'yyyy',\n              month: \"MMM 'yy\",\n              day: 'dd MMM',\n              hour: 'HH:mm'\n            },\n            style: {\n              color: '#fff'\n            }\n          },\n          title: {\n            text: '时间',\n            style: {\n              color: '#fff'\n            }\n          }\n        },\n        tooltip: {\n          enabled: true,\n          x: {\n            format: 'HH:mm:ss'\n          }\n        },\n        title: {\n          text: 'Fps',\n          align: 'left',\n          style: {\n            color: '#fff'\n          }\n        },\n        stroke: {\n          width: 2\n        },\n        series: []\n      },\n      cpuSeries: [],\n      memSeries: [],\n      fpsSeries: []\n    };\n  },\n  created() {\n    this.deviceData = {\n      device_name: this.$route.query.device_name,\n      other_field: this.$route.query.other_field\n    };\n    this.fetchDevicePerfInfo();\n    this.fetchDeviceMemInfo();\n    this.fetchDeviceFpsInfo();\n  },\n  methods: {\n    fetchDevicePerfInfo() {\n      const payload = {\n        device_name: this.deviceData.device_name,\n        other_field: this.deviceData.other_field\n      };\n      axios.post('http://127.0.0.1:5000/get_cpu_info', payload).then(response => {\n        //console.log(\"API response:\", response.data); \n        this.devicePerfInfo = response.data;\n        this.processChartData();\n        // console.log(this.devicePerfInfo)\n      }).catch(error => {\n        console.error(\"获取设备cpu信息出错:\", error);\n      });\n    },\n    fetchDeviceMemInfo() {\n      const payload = {\n        device_name: this.deviceData.device_name,\n        other_field: this.deviceData.other_field\n      };\n      axios.post('http://127.0.0.1:5000/get_mem_info', payload).then(response => {\n        this.deviceMemInfo = response.data;\n        this.processMemChartData();\n      }).catch(error => {\n        console.error(\"获取设备memory信息出错:\", error);\n      });\n    },\n    fetchDeviceFpsInfo() {\n      const payload = {\n        device_name: this.deviceData.device_name,\n        other_field: this.deviceData.other_field\n      };\n      axios.post('http://127.0.0.1:5000/get_fps_info', payload).then(response => {\n        this.deviceFpsInfo = response.data;\n        this.processFpsChartData(); // 添加这行调用\n      }).catch(error => {\n        console.error(\"获取设备fps信息出错:\", error);\n      });\n    },\n    processChartData() {\n      const cpuSeries = this.devicePerfInfo.map(data => ({\n        x: new Date(data.recorded_at + ' UTC').getTime(),\n        // 加上 ' UTC' 以确保时间戳被解释为UTC时间\n        y: data.device_cpu_rate\n      }));\n      const pidCpuSeries = this.devicePerfInfo.map(data => ({\n        x: new Date(data.recorded_at + ' UTC').getTime(),\n        y: data.pid_cpu_rate\n      }));\n      const userRateSeries = this.devicePerfInfo.map(data => ({\n        x: new Date(data.recorded_at + ' UTC').getTime(),\n        y: data.user_rate\n      }));\n      this.cpuSeries = [{\n        name: 'CPU Rate',\n        data: cpuSeries\n      }, {\n        name: 'PID CPU Rate',\n        data: pidCpuSeries\n      }, {\n        name: 'User Rate',\n        data: userRateSeries\n      }];\n    },\n    processMemChartData() {\n      const memSeries = this.deviceMemInfo.map(data => ({\n        x: new Date(data.recorded_at + ' UTC').getTime(),\n        y: data.total_ram\n      }));\n      const pidMemSeries = this.deviceMemInfo.map(data => ({\n        x: new Date(data.recorded_at + ' UTC').getTime(),\n        y: data.pid_pss\n      }));\n      this.memSeries = [{\n        name: 'Memory Totel',\n        data: memSeries\n      }, {\n        name: 'Memory Pid Pss',\n        data: pidMemSeries\n      }];\n    },\n    processFpsChartData() {\n      const fpsSeries = this.deviceFpsInfo.map(data => ({\n        x: new Date(data.recorded_at + ' UTC').getTime(),\n        y: data.fps\n      }));\n      const jankSeries = this.deviceFpsInfo.map(data => ({\n        x: new Date(data.recorded_at + ' UTC').getTime(),\n        y: data.jank\n      }));\n      this.fpsSeries = [{\n        name: 'Fps',\n        data: fpsSeries\n      }, {\n        name: 'Jank',\n        data: jankSeries\n      }];\n    }\n  }\n};","map":{"version":3,"names":["axios","VueApexCharts","name","components","apexchart","data","deviceData","devicePerfInfo","cpuChartOptions","chart","type","height","animations","enabled","easing","dynamicAnimation","speed","xaxis","labels","datetimeFormatter","year","month","day","hour","style","color","title","text","tooltip","x","format","align","stroke","width","series","memChartOptions","fpsChartOptions","cpuSeries","memSeries","fpsSeries","created","device_name","$route","query","other_field","fetchDevicePerfInfo","fetchDeviceMemInfo","fetchDeviceFpsInfo","methods","payload","post","then","response","processChartData","catch","error","console","deviceMemInfo","processMemChartData","deviceFpsInfo","processFpsChartData","map","Date","recorded_at","getTime","y","device_cpu_rate","pidCpuSeries","pid_cpu_rate","userRateSeries","user_rate","total_ram","pidMemSeries","pid_pss","fps","jankSeries","jank"],"sources":["/Users/yangcong/性能/Perf/frontend/my-vue-app/src/components/DeviceDetails.vue"],"sourcesContent":["<template>\n    <!-- <div>\n        <h1>设备详情</h1>\n        <p v-if=\"deviceData\">\n            <strong>设备名称：</strong> {{ deviceData.device_name }}\n        </p>\n        <p v-if=\"deviceData\">\n            <strong>其他字段：</strong> {{ deviceData.other_field }}\n        </p>\n        <p v-else>\n            加载中...\n        </p>\n    </div> -->\n    <div class=\"card\">\n        <h2>CPU</h2>\n        <div v-if=\"devicePerfInfo\">\n            <apexchart type=\"area\" height=\"350\" :options=\"cpuChartOptions\" :series=\"cpuSeries\"></apexchart>\n        </div>\n    </div>\n    <div class=\"card\">\n        <h2>Memory</h2>\n        <div v-if=\"deviceMemInfo\">\n            <apexchart type=\"area\" height=\"350\" :options=\"memChartOptions\" :series=\"memSeries\"></apexchart>\n        </div>\n    </div>\n    <div class=\"card\">\n        <h2>FPS</h2>\n        <div v-if=\"deviceFpsInfo\">\n            <apexchart type=\"area\" height=\"350\" :options=\"fpsChartOptions\" :series=\"fpsSeries\"></apexchart>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport VueApexCharts from 'vue3-apexcharts';\n\nexport default {\n    name: 'DeviceDetails',\n    components: {\n        apexchart: VueApexCharts\n    },\n    data() {\n        return {\n            deviceData: null,\n            devicePerfInfo: null,\n            cpuChartOptions: {\n                chart: {\n                    type: 'area',\n                    height: 350,\n                    animations: {\n                        enabled: true,\n                        easing: 'linear',\n                        dynamicAnimation: {\n                            speed: 1000\n                        }\n                    },\n                },\n                xaxis: {\n                    type: 'datetime',\n                    labels: {\n                        datetimeFormatter: {\n                            year: 'yyyy',\n                            month: \"MMM 'yy\",\n                            day: 'dd MMM',\n                            hour: 'HH:mm'\n                        },\n                        style: {\n                            color: '#fff',\n                        }\n\n                    },\n                    title: {\n                        text: '时间',\n                        style: {\n                            color: '#fff'\n                        }\n                    }\n                },\n                tooltip: {\n                    enabled: true,\n                    x: {\n                        format: 'HH:mm:ss'\n                    }\n                },\n                title: {\n                    text: 'CPU',\n                    align: 'left'\n                },\n                stroke: {\n                    width: 2\n                },\n                series: []\n            },\n            memChartOptions: {\n                chart: {\n                    type: 'area',\n                    height: 350,\n                    animations: {\n                        enabled: true,\n                        easing: 'linear',\n                        dynamicAnimation: {\n                            speed: 1000\n                        }\n                    },\n                },\n                xaxis: {\n                    type: 'datetime',\n                    labels: {\n                        datetimeFormatter: {\n                            year: 'yyyy',\n                            month: \"MMM 'yy\",\n                            day: 'dd MMM',\n                            hour: 'HH:mm'\n                        },\n                        style: {\n                            color: '#fff',\n                        }\n                    },\n                    title: {\n                        text: '时间',\n                        style: {\n                            color: '#fff'\n                        }\n                    }\n                },\n                tooltip: {\n                    enabled: true,\n                    x: {\n                        format: 'HH:mm:ss'\n                    }\n                },\n                title: {\n                    text: 'Memory Usage',\n                    align: 'left',\n                    style: {\n                        color: '#fff'\n                    }\n                },\n                stroke: {\n                    width: 2\n                },\n                series: []\n            },\n            fpsChartOptions: {\n                chart: {\n                    type: 'area',\n                    height: 350,\n                    animations: {\n                        enabled: true,\n                        easing: 'linear',\n                        dynamicAnimation: {\n                            speed: 1000\n                        }\n                    },\n                },\n                xaxis: {\n                    type: 'datetime',\n                    labels: {\n                        datetimeFormatter: {\n                            year: 'yyyy',\n                            month: \"MMM 'yy\",\n                            day: 'dd MMM',\n                            hour: 'HH:mm'\n                        },\n                        style: {\n                            color: '#fff',\n                        }\n                    },\n                    title: {\n                        text: '时间',\n                        style: {\n                            color: '#fff'\n                        }\n                    }\n                },\n                tooltip: {\n                    enabled: true,\n                    x: {\n                        format: 'HH:mm:ss'\n                    }\n                },\n                title: {\n                    text: 'Fps',\n                    align: 'left',\n                    style: {\n                        color: '#fff'\n                    }\n                },\n                stroke: {\n                    width: 2\n                },\n                series: []\n            },\n            cpuSeries: [],\n            memSeries: [],\n            fpsSeries: []\n        };\n    },\n    created() {\n        this.deviceData = {\n            device_name: this.$route.query.device_name,\n            other_field: this.$route.query.other_field\n        };\n\n        this.fetchDevicePerfInfo();\n        this.fetchDeviceMemInfo();\n        this.fetchDeviceFpsInfo();\n    },\n    methods: {\n        fetchDevicePerfInfo() {\n            const payload = {\n                device_name: this.deviceData.device_name,\n                other_field: this.deviceData.other_field\n            };\n\n            axios.post('http://127.0.0.1:5000/get_cpu_info', payload)\n                .then(response => {\n                    //console.log(\"API response:\", response.data); \n                    this.devicePerfInfo = response.data;\n                    this.processChartData();\n                    // console.log(this.devicePerfInfo)\n                })\n                .catch(error => {\n                    console.error(\"获取设备cpu信息出错:\", error);\n                });\n        },\n        fetchDeviceMemInfo() {\n            const payload = {\n                device_name: this.deviceData.device_name,\n                other_field: this.deviceData.other_field\n            };\n\n            axios.post('http://127.0.0.1:5000/get_mem_info', payload)\n                .then(response => {\n                    this.deviceMemInfo = response.data;\n                    this.processMemChartData();\n                })\n                .catch(error => {\n                    console.error(\"获取设备memory信息出错:\", error);\n                });\n        },\n        fetchDeviceFpsInfo() {\n            const payload = {\n                device_name: this.deviceData.device_name,\n                other_field: this.deviceData.other_field\n            };\n\n            axios.post('http://127.0.0.1:5000/get_fps_info', payload)\n                .then(response => {\n                    this.deviceFpsInfo = response.data;\n                    this.processFpsChartData(); // 添加这行调用\n                })\n                .catch(error => {\n                    console.error(\"获取设备fps信息出错:\", error);\n                });\n        },\n        processChartData() {\n\n            const cpuSeries = this.devicePerfInfo.map(data => ({\n                x: new Date(data.recorded_at + ' UTC').getTime(), // 加上 ' UTC' 以确保时间戳被解释为UTC时间\n                y: data.device_cpu_rate\n            }));\n\n            const pidCpuSeries = this.devicePerfInfo.map(data => ({\n                x: new Date(data.recorded_at + ' UTC').getTime(),\n                y: data.pid_cpu_rate\n            }));\n\n            const userRateSeries = this.devicePerfInfo.map(data => ({\n                x: new Date(data.recorded_at + ' UTC').getTime(),\n                y: data.user_rate\n            }));\n\n\n            this.cpuSeries = [\n                {\n                    name: 'CPU Rate',\n                    data: cpuSeries\n                },\n                {\n                    name: 'PID CPU Rate',\n                    data: pidCpuSeries\n                },\n                {\n                    name: 'User Rate',\n                    data: userRateSeries\n                }\n            ];\n        },\n        processMemChartData() {\n            const memSeries = this.deviceMemInfo.map(data => ({\n                x: new Date(data.recorded_at + ' UTC').getTime(),\n                y: data.total_ram\n            }));\n\n            const pidMemSeries = this.deviceMemInfo.map(data => ({\n                x: new Date(data.recorded_at + ' UTC').getTime(),\n                y: data.pid_pss\n            }));\n\n            this.memSeries = [\n                {\n                    name: 'Memory Totel',\n                    data: memSeries\n                },\n                {\n                    name: 'Memory Pid Pss',\n                    data: pidMemSeries\n                },\n            ];\n        },\n        processFpsChartData() {\n            const fpsSeries = this.deviceFpsInfo.map(data => ({\n                x: new Date(data.recorded_at + ' UTC').getTime(),\n                y: data.fps\n            }));\n\n            const jankSeries = this.deviceFpsInfo.map(data => ({\n                x: new Date(data.recorded_at + ' UTC').getTime(),\n                y: data.jank\n            }));\n\n            this.fpsSeries = [\n                {\n                    name: 'Fps',\n                    data: fpsSeries\n                },\n                {\n                    name: 'Jank',\n                    data: jankSeries\n                },\n            ];\n        }\n    }\n};\n</script>\n\n<style scoped>\nh1 {\n    color: #42b983;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}