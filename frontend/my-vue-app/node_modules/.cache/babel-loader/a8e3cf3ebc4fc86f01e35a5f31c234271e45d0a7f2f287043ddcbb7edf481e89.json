{"ast":null,"code":"import axios from 'axios';\nimport VueApexCharts from 'vue3-apexcharts';\nexport default {\n  name: 'DeviceDetails',\n  components: {\n    apexchart: VueApexCharts\n  },\n  data() {\n    return {\n      deviceData: null,\n      devicePerfInfo: null,\n      chartOptions: {\n        chart: {\n          type: 'area',\n          height: 350,\n          animations: {\n            enabled: true,\n            easing: 'linear',\n            dynamicAnimation: {\n              speed: 1000\n            }\n          },\n          xaxis: [{\n            x: new Date('23 Nov 2017').getTime(),\n            borderColor: '#775DD0',\n            label: {\n              style: {\n                color: '#fff'\n              },\n              text: 'X-axis annotation - 22 Nov'\n            }\n          }]\n        },\n        markers: {\n          size: 0\n        },\n        xaxis: {\n          type: 'datetime',\n          labels: {\n            format: 'yyyy-MM-dd HH:mm:ss'\n          }\n        },\n        title: {\n          text: 'CPU',\n          align: 'left'\n        },\n        series: []\n      },\n      series: []\n    };\n  },\n  created() {\n    this.deviceData = {\n      device_name: this.$route.query.device_name,\n      other_field: this.$route.query.other_field\n    };\n    this.fetchDevicePerfInfo();\n  },\n  methods: {\n    fetchDevicePerfInfo() {\n      const payload = {\n        device_name: this.deviceData.device_name,\n        other_field: this.deviceData.other_field\n      };\n      axios.post('http://127.0.0.1:5000/get_cpu_info', payload).then(response => {\n        //console.log(\"API response:\", response.data); \n        this.devicePerfInfo = response.data;\n        this.processChartData();\n        // console.log(this.devicePerfInfo)\n      }).catch(error => {\n        console.error(\"获取设备性能信息出错:\", error);\n      });\n    },\n    processChartData() {\n      const cpuSeries = this.devicePerfInfo.map(data => ({\n        x: new Date(data.recorded_at + ' UTC').getTime(),\n        // 加上 ' UTC' 以确保时间戳被解释为UTC时间\n        y: data.device_cpu_rate\n      }));\n      this.series = [{\n        name: 'CPU Rate',\n        data: cpuSeries\n      }];\n    }\n  }\n};","map":{"version":3,"names":["axios","VueApexCharts","name","components","apexchart","data","deviceData","devicePerfInfo","chartOptions","chart","type","height","animations","enabled","easing","dynamicAnimation","speed","xaxis","x","Date","getTime","borderColor","label","style","color","text","markers","size","labels","format","title","align","series","created","device_name","$route","query","other_field","fetchDevicePerfInfo","methods","payload","post","then","response","processChartData","catch","error","console","cpuSeries","map","recorded_at","y","device_cpu_rate"],"sources":["/Users/yangcong/性能/Perf/frontend/my-vue-app/src/components/DeviceDetails.vue"],"sourcesContent":["<template>\n    <div>\n        <h1>设备详情</h1>\n        <p v-if=\"deviceData\">\n            <strong>设备名称：</strong> {{ deviceData.device_name }}\n        </p>\n        <p v-if=\"deviceData\">\n            <strong>其他字段：</strong> {{ deviceData.other_field }}\n        </p>\n        <p v-else>\n            加载中...\n        </p>\n    </div>\n    <div class=\"card\">\n        <h2>设备性能数据</h2>\n        <div class=\"card-body\" v-if=\"devicePerfInfo\">\n            <apexchart type=\"area\" height=\"350\" :options=\"chartOptions\" :series=\"series\"></apexchart>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport VueApexCharts from 'vue3-apexcharts';\n\nexport default {\n    name: 'DeviceDetails',\n    components: {\n        apexchart: VueApexCharts\n    },\n    data() {\n        return {\n            deviceData: null,\n            devicePerfInfo: null,\n            chartOptions: {\n                chart: {\n                    type: 'area',\n                    height: 350,\n                    animations: {\n                        enabled: true,\n                        easing: 'linear',\n                        dynamicAnimation: {\n                            speed: 1000\n                        }\n                    },\n                    xaxis: [\n                        {\n                            x: new Date('23 Nov 2017').getTime(),\n                            borderColor: '#775DD0',\n                            label: {\n                                style: {\n                                    color: '#fff',\n                                },\n                                text: 'X-axis annotation - 22 Nov'\n                            }\n                        }\n                    ]\n                },\n                markers: {\n                    size: 0\n                },\n                xaxis: {\n                    type: 'datetime',\n                    labels: {\n                        format: 'yyyy-MM-dd HH:mm:ss'\n                    }\n                },\n                title: {\n                    text: 'CPU',\n                    align: 'left'\n                },\n                series: []\n            },\n            series: []\n        };\n    },\n    created() {\n        this.deviceData = {\n            device_name: this.$route.query.device_name,\n            other_field: this.$route.query.other_field\n        };\n\n        this.fetchDevicePerfInfo();\n    },\n    methods: {\n        fetchDevicePerfInfo() {\n            const payload = {\n                device_name: this.deviceData.device_name,\n                other_field: this.deviceData.other_field\n            };\n\n            axios.post('http://127.0.0.1:5000/get_cpu_info', payload)\n                .then(response => {\n                    //console.log(\"API response:\", response.data); \n                    this.devicePerfInfo = response.data;\n                    this.processChartData();\n                    // console.log(this.devicePerfInfo)\n                })\n                .catch(error => {\n                    console.error(\"获取设备性能信息出错:\", error);\n                });\n        },\n        processChartData() {\n\n            const cpuSeries = this.devicePerfInfo.map(data => ({\n                x: new Date(data.recorded_at + ' UTC').getTime(), // 加上 ' UTC' 以确保时间戳被解释为UTC时间\n                y: data.device_cpu_rate\n            }));\n\n\n            this.series = [{\n                name: 'CPU Rate',\n                data: cpuSeries\n            }];\n        }\n    }\n};\n</script>\n\n<style scoped>\nh1 {\n    color: #42b983;\n}\n</style>\n"],"mappings":"AAsBA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,aAAY,MAAO,iBAAiB;AAE3C,eAAe;EACXC,IAAI,EAAE,eAAe;EACrBC,UAAU,EAAE;IACRC,SAAS,EAAEH;EACf,CAAC;EACDI,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,UAAU,EAAE,IAAI;MAChBC,cAAc,EAAE,IAAI;MACpBC,YAAY,EAAE;QACVC,KAAK,EAAE;UACHC,IAAI,EAAE,MAAM;UACZC,MAAM,EAAE,GAAG;UACXC,UAAU,EAAE;YACRC,OAAO,EAAE,IAAI;YACbC,MAAM,EAAE,QAAQ;YAChBC,gBAAgB,EAAE;cACdC,KAAK,EAAE;YACX;UACJ,CAAC;UACDC,KAAK,EAAE,CACH;YACIC,CAAC,EAAE,IAAIC,IAAI,CAAC,aAAa,CAAC,CAACC,OAAO,CAAC,CAAC;YACpCC,WAAW,EAAE,SAAS;YACtBC,KAAK,EAAE;cACHC,KAAK,EAAE;gBACHC,KAAK,EAAE;cACX,CAAC;cACDC,IAAI,EAAE;YACV;UACJ;QAER,CAAC;QACDC,OAAO,EAAE;UACLC,IAAI,EAAE;QACV,CAAC;QACDV,KAAK,EAAE;UACHP,IAAI,EAAE,UAAU;UAChBkB,MAAM,EAAE;YACJC,MAAM,EAAE;UACZ;QACJ,CAAC;QACDC,KAAK,EAAE;UACHL,IAAI,EAAE,KAAK;UACXM,KAAK,EAAE;QACX,CAAC;QACDC,MAAM,EAAE;MACZ,CAAC;MACDA,MAAM,EAAE;IACZ,CAAC;EACL,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAAC3B,UAAS,GAAI;MACd4B,WAAW,EAAE,IAAI,CAACC,MAAM,CAACC,KAAK,CAACF,WAAW;MAC1CG,WAAW,EAAE,IAAI,CAACF,MAAM,CAACC,KAAK,CAACC;IACnC,CAAC;IAED,IAAI,CAACC,mBAAmB,CAAC,CAAC;EAC9B,CAAC;EACDC,OAAO,EAAE;IACLD,mBAAmBA,CAAA,EAAG;MAClB,MAAME,OAAM,GAAI;QACZN,WAAW,EAAE,IAAI,CAAC5B,UAAU,CAAC4B,WAAW;QACxCG,WAAW,EAAE,IAAI,CAAC/B,UAAU,CAAC+B;MACjC,CAAC;MAEDrC,KAAK,CAACyC,IAAI,CAAC,oCAAoC,EAAED,OAAO,EACnDE,IAAI,CAACC,QAAO,IAAK;QACd;QACA,IAAI,CAACpC,cAAa,GAAIoC,QAAQ,CAACtC,IAAI;QACnC,IAAI,CAACuC,gBAAgB,CAAC,CAAC;QACvB;MACJ,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACZC,OAAO,CAACD,KAAK,CAAC,aAAa,EAAEA,KAAK,CAAC;MACvC,CAAC,CAAC;IACV,CAAC;IACDF,gBAAgBA,CAAA,EAAG;MAEf,MAAMI,SAAQ,GAAI,IAAI,CAACzC,cAAc,CAAC0C,GAAG,CAAC5C,IAAG,KAAM;QAC/Ca,CAAC,EAAE,IAAIC,IAAI,CAACd,IAAI,CAAC6C,WAAU,GAAI,MAAM,CAAC,CAAC9B,OAAO,CAAC,CAAC;QAAE;QAClD+B,CAAC,EAAE9C,IAAI,CAAC+C;MACZ,CAAC,CAAC,CAAC;MAGH,IAAI,CAACpB,MAAK,GAAI,CAAC;QACX9B,IAAI,EAAE,UAAU;QAChBG,IAAI,EAAE2C;MACV,CAAC,CAAC;IACN;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}