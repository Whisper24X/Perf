{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-8a7dbd3c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"card\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"CPU\", -1));\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  class: \"card\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Memory\", -1));\nconst _hoisted_6 = {\n  key: 0\n};\nconst _hoisted_7 = {\n  class: \"card\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"FPS\", -1));\nconst _hoisted_9 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_apexchart = _resolveComponent(\"apexchart\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_hoisted_2, $data.devicePerfInfo ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_apexchart, {\n    type: \"area\",\n    height: \"350\",\n    options: $data.cpuChartOptions,\n    series: $data.cpuSeries\n  }, null, 8, [\"options\", \"series\"])])) : _createCommentVNode(\"\", true)]), _createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _ctx.deviceMemInfo ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createVNode(_component_apexchart, {\n    type: \"area\",\n    height: \"350\",\n    options: $data.memChartOptions,\n    series: $data.memSeries\n  }, null, 8, [\"options\", \"series\"])])) : _createCommentVNode(\"\", true)]), _createElementVNode(\"div\", _hoisted_7, [_hoisted_8, _ctx.deviceFpsInfo ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_createVNode(_component_apexchart, {\n    type: \"area\",\n    height: \"350\",\n    options: $data.fpsChartOptions,\n    series: $data.fpsSeries\n  }, null, 8, [\"options\", \"series\"])])) : _createCommentVNode(\"\", true)])], 64);\n}","map":{"version":3,"names":["class","_createElementVNode","key","_createElementBlock","_Fragment","_hoisted_1","_hoisted_2","$data","devicePerfInfo","_hoisted_3","_createVNode","_component_apexchart","type","height","options","cpuChartOptions","series","cpuSeries","_createCommentVNode","_hoisted_4","_hoisted_5","_ctx","deviceMemInfo","_hoisted_6","memChartOptions","memSeries","_hoisted_7","_hoisted_8","deviceFpsInfo","_hoisted_9","fpsChartOptions","fpsSeries"],"sources":["D:\\Perf\\frontend\\my-vue-app\\src\\components\\DeviceDetails.vue"],"sourcesContent":["<template>\r\n    <!-- <div>\r\n        <h1>设备详情</h1>\r\n        <p v-if=\"deviceData\">\r\n            <strong>设备名称：</strong> {{ deviceData.device_name }}\r\n        </p>\r\n        <p v-if=\"deviceData\">\r\n            <strong>其他字段：</strong> {{ deviceData.other_field }}\r\n        </p>\r\n        <p v-else>\r\n            加载中...\r\n        </p>\r\n    </div> -->\r\n    <div class=\"card\">\r\n        <h2>CPU</h2>\r\n        <div v-if=\"devicePerfInfo\">\r\n            <apexchart type=\"area\" height=\"350\" :options=\"cpuChartOptions\" :series=\"cpuSeries\"></apexchart>\r\n        </div>\r\n    </div>\r\n    <div class=\"card\">\r\n        <h2>Memory</h2>\r\n        <div v-if=\"deviceMemInfo\">\r\n            <apexchart type=\"area\" height=\"350\" :options=\"memChartOptions\" :series=\"memSeries\"></apexchart>\r\n        </div>\r\n    </div>\r\n    <div class=\"card\">\r\n        <h2>FPS</h2>\r\n        <div v-if=\"deviceFpsInfo\">\r\n            <apexchart type=\"area\" height=\"350\" :options=\"fpsChartOptions\" :series=\"fpsSeries\"></apexchart>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport VueApexCharts from 'vue3-apexcharts';\r\n\r\nexport default {\r\n    name: 'DeviceDetails',\r\n    components: {\r\n        apexchart: VueApexCharts\r\n    },\r\n    data() {\r\n        return {\r\n            deviceData: null,\r\n            devicePerfInfo: null,\r\n            cpuChartOptions: {\r\n                chart: {\r\n                    type: 'area',\r\n                    height: 350,\r\n                    animations: {\r\n                        enabled: true,\r\n                        easing: 'linear',\r\n                        dynamicAnimation: {\r\n                            speed: 1000\r\n                        }\r\n                    },\r\n                },\r\n                xaxis: {\r\n                    type: 'datetime',\r\n                    labels: {\r\n                        datetimeFormatter: {\r\n                            year: 'yyyy',\r\n                            month: \"MMM 'yy\",\r\n                            day: 'dd MMM',\r\n                            hour: 'HH:mm'\r\n                        },\r\n                        style: {\r\n                            color: '#fff',\r\n                        }\r\n\r\n                    },\r\n                    title: {\r\n                        text: '时间',\r\n                        style: {\r\n                            color: '#fff'\r\n                        }\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    enabled: true,\r\n                    x: {\r\n                        format: 'HH:mm:ss'\r\n                    }\r\n                },\r\n                title: {\r\n                    text: 'CPU',\r\n                    align: 'left'\r\n                },\r\n                stroke: {\r\n                    width: 2\r\n                },\r\n                series: []\r\n            },\r\n            memChartOptions: {\r\n                chart: {\r\n                    type: 'area',\r\n                    height: 350,\r\n                    animations: {\r\n                        enabled: true,\r\n                        easing: 'linear',\r\n                        dynamicAnimation: {\r\n                            speed: 1000\r\n                        }\r\n                    },\r\n                },\r\n                xaxis: {\r\n                    type: 'datetime',\r\n                    labels: {\r\n                        datetimeFormatter: {\r\n                            year: 'yyyy',\r\n                            month: \"MMM 'yy\",\r\n                            day: 'dd MMM',\r\n                            hour: 'HH:mm'\r\n                        },\r\n                        style: {\r\n                            color: '#fff',\r\n                        }\r\n                    },\r\n                    title: {\r\n                        text: '时间',\r\n                        style: {\r\n                            color: '#fff'\r\n                        }\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    enabled: true,\r\n                    x: {\r\n                        format: 'HH:mm:ss'\r\n                    }\r\n                },\r\n                title: {\r\n                    text: 'Memory Usage',\r\n                    align: 'left',\r\n                    style: {\r\n                        color: '#fff'\r\n                    }\r\n                },\r\n                stroke: {\r\n                    width: 2\r\n                },\r\n                series: []\r\n            },\r\n            fpsChartOptions: {\r\n                chart: {\r\n                    type: 'area',\r\n                    height: 350,\r\n                    animations: {\r\n                        enabled: true,\r\n                        easing: 'linear',\r\n                        dynamicAnimation: {\r\n                            speed: 1000\r\n                        }\r\n                    },\r\n                },\r\n                xaxis: {\r\n                    type: 'datetime',\r\n                    labels: {\r\n                        datetimeFormatter: {\r\n                            year: 'yyyy',\r\n                            month: \"MMM 'yy\",\r\n                            day: 'dd MMM',\r\n                            hour: 'HH:mm'\r\n                        },\r\n                        style: {\r\n                            color: '#fff',\r\n                        }\r\n                    },\r\n                    title: {\r\n                        text: '时间',\r\n                        style: {\r\n                            color: '#fff'\r\n                        }\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    enabled: true,\r\n                    x: {\r\n                        format: 'HH:mm:ss'\r\n                    }\r\n                },\r\n                title: {\r\n                    text: 'Fps',\r\n                    align: 'left',\r\n                    style: {\r\n                        color: '#fff'\r\n                    }\r\n                },\r\n                stroke: {\r\n                    width: 2\r\n                },\r\n                series: []\r\n            },\r\n            cpuSeries: [],\r\n            memSeries: [],\r\n            fpsSeries: []\r\n        };\r\n    },\r\n    created() {\r\n        this.deviceData = {\r\n            device_name: this.$route.query.device_name,\r\n            other_field: this.$route.query.other_field\r\n        };\r\n\r\n        this.fetchDevicePerfInfo();\r\n        this.fetchDeviceMemInfo();\r\n        this.fetchDeviceFpsInfo();\r\n    },\r\n    methods: {\r\n        fetchDevicePerfInfo() {\r\n            const payload = {\r\n                device_name: this.deviceData.device_name,\r\n                other_field: this.deviceData.other_field\r\n            };\r\n\r\n            axios.post('http://127.0.0.1:5000/get_cpu_info', payload)\r\n                .then(response => {\r\n                    //console.log(\"API response:\", response.data); \r\n                    this.devicePerfInfo = response.data;\r\n                    this.processChartData();\r\n                    // console.log(this.devicePerfInfo)\r\n                })\r\n                .catch(error => {\r\n                    console.error(\"获取设备cpu信息出错:\", error);\r\n                });\r\n        },\r\n        fetchDeviceMemInfo() {\r\n            const payload = {\r\n                device_name: this.deviceData.device_name,\r\n                other_field: this.deviceData.other_field\r\n            };\r\n\r\n            axios.post('http://127.0.0.1:5000/get_mem_info', payload)\r\n                .then(response => {\r\n                    this.deviceMemInfo = response.data;\r\n                    this.processMemChartData();\r\n                })\r\n                .catch(error => {\r\n                    console.error(\"获取设备memory信息出错:\", error);\r\n                });\r\n        },\r\n        fetchDeviceFpsInfo() {\r\n            const payload = {\r\n                device_name: this.deviceData.device_name,\r\n                other_field: this.deviceData.other_field\r\n            };\r\n\r\n            axios.post('http://127.0.0.1:5000/get_fps_info', payload)\r\n                .then(response => {\r\n                    this.deviceFpsInfo = response.data;\r\n                    this.processFpsChartData(); // 添加这行调用\r\n                })\r\n                .catch(error => {\r\n                    console.error(\"获取设备fps信息出错:\", error);\r\n                });\r\n        },\r\n        processChartData() {\r\n\r\n            const cpuSeries = this.devicePerfInfo.map(data => ({\r\n                x: new Date(data.recorded_at + ' UTC').getTime(), // 加上 ' UTC' 以确保时间戳被解释为UTC时间\r\n                y: data.device_cpu_rate\r\n            }));\r\n\r\n            const pidCpuSeries = this.devicePerfInfo.map(data => ({\r\n                x: new Date(data.recorded_at + ' UTC').getTime(),\r\n                y: data.pid_cpu_rate\r\n            }));\r\n\r\n            const userRateSeries = this.devicePerfInfo.map(data => ({\r\n                x: new Date(data.recorded_at + ' UTC').getTime(),\r\n                y: data.user_rate\r\n            }));\r\n\r\n\r\n            this.cpuSeries = [\r\n                {\r\n                    name: 'CPU Rate',\r\n                    data: cpuSeries\r\n                },\r\n                {\r\n                    name: 'PID CPU Rate',\r\n                    data: pidCpuSeries\r\n                },\r\n                {\r\n                    name: 'User Rate',\r\n                    data: userRateSeries\r\n                }\r\n            ];\r\n        },\r\n        processMemChartData() {\r\n            const memSeries = this.deviceMemInfo.map(data => ({\r\n                x: new Date(data.recorded_at + ' UTC').getTime(),\r\n                y: data.total_ram\r\n            }));\r\n\r\n            const pidMemSeries = this.deviceMemInfo.map(data => ({\r\n                x: new Date(data.recorded_at + ' UTC').getTime(),\r\n                y: data.pid_pss\r\n            }));\r\n\r\n            this.memSeries = [\r\n                {\r\n                    name: 'Memory Totel',\r\n                    data: memSeries\r\n                },\r\n                {\r\n                    name: 'Memory Pid Pss',\r\n                    data: pidMemSeries\r\n                },\r\n            ];\r\n        },\r\n        processFpsChartData() {\r\n            const fpsSeries = this.deviceFpsInfo.map(data => ({\r\n                x: new Date(data.recorded_at + ' UTC').getTime(),\r\n                y: data.fps\r\n            }));\r\n\r\n            const jankSeries = this.deviceFpsInfo.map(data => ({\r\n                x: new Date(data.recorded_at + ' UTC').getTime(),\r\n                y: data.jank\r\n            }));\r\n\r\n            this.fpsSeries = [\r\n                {\r\n                    name: 'Fps',\r\n                    data: fpsSeries\r\n                },\r\n                {\r\n                    name: 'Jank',\r\n                    data: jankSeries\r\n                },\r\n            ];\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nh1 {\r\n    color: #42b983;\r\n}\r\n</style>\r\n"],"mappings":";;;EAaSA,KAAK,EAAC;AAAM;gEACbC,mBAAA,CAAY,YAAR,KAAG;;EAdfC,GAAA;AAAA;;EAmBSF,KAAK,EAAC;AAAM;gEACbC,mBAAA,CAAe,YAAX,QAAM;;EApBlBC,GAAA;AAAA;;EAyBSF,KAAK,EAAC;AAAM;gEACbC,mBAAA,CAAY,YAAR,KAAG;;EA1BfC,GAAA;AAAA;;;uBAAAC,mBAAA,CAAAC,SAAA,SAaIH,mBAAA,CAKM,OALNI,UAKM,GAJFC,UAAY,EACDC,KAAA,CAAAC,cAAc,I,cAAzBL,mBAAA,CAEM,OAjBdM,UAAA,GAgBYC,YAAA,CAA+FC,oBAAA;IAApFC,IAAI,EAAC,MAAM;IAACC,MAAM,EAAC,KAAK;IAAEC,OAAO,EAAEP,KAAA,CAAAQ,eAAe;IAAGC,MAAM,EAAET,KAAA,CAAAU;0CAhBpFC,mBAAA,W,GAmBIjB,mBAAA,CAKM,OALNkB,UAKM,GAJFC,UAAe,EACJC,IAAA,CAAAC,aAAa,I,cAAxBnB,mBAAA,CAEM,OAvBdoB,UAAA,GAsBYb,YAAA,CAA+FC,oBAAA;IAApFC,IAAI,EAAC,MAAM;IAACC,MAAM,EAAC,KAAK;IAAEC,OAAO,EAAEP,KAAA,CAAAiB,eAAe;IAAGR,MAAM,EAAET,KAAA,CAAAkB;0CAtBpFP,mBAAA,W,GAyBIjB,mBAAA,CAKM,OALNyB,UAKM,GAJFC,UAAY,EACDN,IAAA,CAAAO,aAAa,I,cAAxBzB,mBAAA,CAEM,OA7Bd0B,UAAA,GA4BYnB,YAAA,CAA+FC,oBAAA;IAApFC,IAAI,EAAC,MAAM;IAACC,MAAM,EAAC,KAAK;IAAEC,OAAO,EAAEP,KAAA,CAAAuB,eAAe;IAAGd,MAAM,EAAET,KAAA,CAAAwB;0CA5BpFb,mBAAA,W","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}